#模块的定义:一个.py文件就是一个模块
#作用:以库的形式去封装功能 方便让调用者调用
#可以定义函数 类 变量 也能包含可执行的代码
#注意:不同模块可以定义相同变量名 但每个模块中的变量名作用域只是在本模块中
#模块分类:
#内置模块 自定义模块 第三方模块

# import time
# print(time.ctime())
#import在首次导入模块时 会产生如下3步操作
#1. 打开模块文件
#2. 执行模块对应的文件 将执行过程中产生的名字都丢到模块的名称空间
#3. 在程序中会有一个模块的名称指向模块的名称空间去
#注意:模块命名时不要与系统中的模块重名

#只想从一个模块中导入其中几个函数 用from xx import xx
from time import ctime,time  #部分导入
# from time import *         #"*"号表全部导入
print(ctime())

#from xx import xx 在首次导入模块时 会产生如下3步操作
#1. 以模块为准创造一个模块的名称空间
#2. 执行模块对应的文件 将执行过程中产生的名字都丢到模块的名称空间
#3. 在当前执行文件的名称空间中拿到一个名字 该名字直接指向模块中的某一个名字 意味着可以不用加任何前缀而直接使用
#优点:不用前缀 代码简洁
#缺点:容易与当前执行文件中名称空间冲突(不要使用重名!)

import time as myTime   #加了一个别名
print(myTime.ctime())   #调用时要用别名
# print(time().ctime()) #报错 "没有time这个属性" 此时time已经被替换成了myTime


